[General]
image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
sim-time-limit=50s
warmup-period = 5s
**.vector-recording = false
repeat = 3

output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
seed-set = ${repetition}

##########################################################
#			Simulation parameters                        #
##########################################################
#record-eventlog = true
#eventlog-options = module, displaystring, message
#eventlog-message-detail-pattern = *:(not declaredOn(cMessage) and not declaredOn(cNamedObject) and not declaredOn(cObject))
tkenv-default-config = 
#debug-on-errors=true
#**.coreDebug = true
 

##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################### RLC parameters #######################
#**.fragmentSize=30B
#**.timeout=50s
################### MAC parameters #######################
**.mac.queueSize = 1MiB
**.mac.maxBytesPerTti = 1KiB
**.mac.macDelay.result-recording-modes = all
**.mac.macThroughput.result-recording-modes = all

# Schedulers
**.mac.schedulingDisciplineDl = "MAXCI"
**.mac.schedulingDisciplineUl = "MAXCI"

################ PhyLayer parameters #####################
**.lteNic.phy.usePropagationDelay = true
**.lteNic.phy.channelModel=xmldoc("config_channel.xml")

################ Feedback parameters #####################
**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################

# *
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

**.mobility.initFromDisplayString = true

# UEs
**.enableHandover = false


################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

# General
**.deployer.positionUpdateInterval = 0.001s
**.deployer.broadcastMessageInterval = 1s

# RUs
**.deployer.numRus = 0
**.deployer.ruRange = 50
**.deployer.ruTxPower = "50,50,50;"
**.deployer.ruStartingAngle = 0deg
**.deployer.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)

# AMC
**.deployer.numRbDl = 6
**.deployer.numRbUl = 6
**.deployer.rbyDl = 12
**.deployer.rbyUl = 12
**.deployer.rbxDl = 7
**.deployer.rbxUl = 7
**.deployer.rbPilotDl = 3
**.deployer.rbPilotUl = 0
**.deployer.signalDl = 1
**.deployer.signalUl = 1
**.deployer.numPreferredBands = 1

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
**.mac.amcMode = "AUTO"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 3
**.pfAlpha = 0.95
**.pfTmsAwareDL = false

############### Transmission Power ##################
**.ueTxPower = 26
**.microTxPower = 20
**.*TxPower = 40

[Config VoIP]
network = lte.simulations.networks.SingleCell

#**.numUe = ${numUEs=10,25,50,75}

# Schedulers
**.mac.schedulingDisciplineDl = ${sched="MAXCI_OPT_MB","MAXCI"}
**.mac.schedulingDisciplineUl = "MAXCI"

# one UDP application for each user
*.ue[*].numUdpApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numUdpApps) 
#*.server.numUdpApps = ${numUEs}

# connect each UE to the eNB
**.ue[*].macCellId = 1
**.ue[*].masterId = 1

# positioning and mobility
*.ue[*].mobility.acceleration = 0
*.ue[*].mobility.angle = uniform(0deg, 360deg)
*.ue[*].mobility.constraintAreaMaxX = 1000m
*.ue[*].mobility.constraintAreaMaxY = 1000m
*.ue[*].mobility.constraintAreaMinX = 0m
*.ue[*].mobility.constraintAreaMinY = 0m
*.ue[*].mobility.initFromDisplayString = false
*.ue[*].mobility.initialX = uniform(0m,400m)
*.ue[*].mobility.initialY = uniform(0m,400m)
*.ue[*].mobility.initialZ = 0
*.ue[*].mobility.speed = 1mps
*.ue[*].mobilityType = "LinearMobility"

#============= Application Setup =============
*.ue[*].udpApp[*].typename = "VoIPReceiver"
*.ue[*].udpApp[0].localPort = 3000
*.ue[*].udpApp[0].serverAddress = "server"

*.server.udpApp[*].PacketSize = 40
*.server.udpApp[*].destAddress = "ue["+string(ancestorIndex(0))+"]" # obtain the address of the client by reading its index in the array of udp Apps
*.server.udpApp[*].destAddresses = ""
*.server.udpApp[*].destPort = 3000
*.server.udpApp[*].localPort = 3088+ancestorIndex(0) 
*.server.udpApp[*].typename = "VoIPSender"
*.server.udpApp[*].startTime = uniform(0s,0.050s)
#------------------------------------#

[Config VoipBigSize]
extends = VoIP

*.server.udpApp[*].PacketSize = 400

**.numUe = ${numUEsBig=5,10,15}
*.server.numUdpApps = ${numUEsBig}
