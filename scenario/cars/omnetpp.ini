[General]
cmdenv-express-mode = true
cmdenv-autoflush = true

network = lte.simulations.cars.Highway

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 70s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false

**.coreDebug = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 50m

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.moduleType = "lte.corenetwork.nodes.cars.Car"
*.veinsManager.moduleName = "car"
*.veinsManager.moduleDisplayString = ""
*.veinsManager.launchConfig = xmldoc("heterogeneous.launchd.xml")
*.veinsManager.updateInterval = 0.1s

##########################################################
#                      Mobility                          #
##########################################################
*.car[*].mobilityType = "VeinsInetMobility"

**.deployer.positionUpdateInterval = 0.001s

##########################################################
#      IP configuration for dynamic-created UEs          #
##########################################################
# enrolled multicast groups must be set in the HostAutoConfigurator (instead of demo.xml), seperated by a single space character
*.car[*].configurator.mcastGroups = "224.0.0.10"

##########################################################
#			         channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

# PhyLayer & Feedback parameters
**.lteNic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

##########################################################
#			         mode 4 parameters                   #
##########################################################
**.lteNic.mac.txConfig=xmldoc("sidelink_configuration.xml")

##########################################################
#              LTE specific parameters                   #
##########################################################

# Enable dynamic association of UEs (based on best SINR)
#**.dynamicCellAssociation = true

**.car[*].masterId = 0     # useless if dynamic association is disabled
**.car[*].macCellId = 0    # useless if dynamic association is disabled
#**.eNodeB1.macCellId = 1
#**.eNodeB1.macNodeId = 1
#**.eNodeB2.macCellId = 2
#**.eNodeB2.macNodeId = 2 
#**.eNodeBCount = 2

# AMC module parameters 
**.rbAllocationType = "localized"
**.feedbackType = "ALLBANDS"
**.feedbackGeneratorType = "IDEAL"
**.maxHarqRtx = 0
**.numUe = ${numUEs=10}

# RUs
**.deployer.ruRange = 50
**.deployer.ruTxPower = "50,50,50;"
**.deployer.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)
**.deployer.numRbDl = 25
**.deployer.numRbUl = 25
**.numBands = 25
**.fbDelay = 1

# Enable handover
#**.enableHandover = true
#**.broadcastMessageInterval = 0.5s

# X2 and SCTP configuration
#*.eNodeB*.numX2Apps = 1    # one x2App per peering eNodeB
#*.eNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
#*.eNodeB1.x2App[0].client.connectAddress = "eNodeB2%x2ppp0" 
#*.eNodeB2.x2App[0].client.connectAddress = "eNodeB1%x2ppp0" 
#**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
#**.sctp.enableHeartbeats = false



# ----------------------------------------------------------------------------- #
# Config "VoIP-Uplink"
#
[Config VoIP-UL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numUdpApps = 10
*.server.udpApp[*].typename = "VoIPReceiver"
*.server.udpApp[*].localPort = 3000 + ancestorIndex(0) 

*.car[*].numUdpApps = 1
*.car[*].udpApp[0].typename = "VoIPSender"
*.car[*].udpApp[0].destAddress = "server"
*.car[*].udpApp[0].destPort = 3000 + ancestorIndex(1)


# ----------------------------------------------------------------------------- #
# Config "VoIP-Downlink"
#
[Config VoIP-DL]

##########################################################
#                    App Layer                           #
##########################################################
*.server.numUdpApps = 10
*.server.udpApp[*].typename = "VoIPSender"
*.server.udpApp[*].localPort = 3000 + ancestorIndex(0) 
*.server.udpApp[*].destAddress = "car[" + string(ancestorIndex(0)) + "]"
*.server.udpApp[*].startingTime = 0.05s


*.car[*].numUdpApps = 1
*.car[*].udpApp[0].typename = "VoIPReceiver"


# ----------------------------------------------------------------------------- #
# Config "VoIP-D2D"
#
# In this configuration, UEs run a VoIP application (using UDP as transport layer protocol)
# They communicate using the D2D link, if they are under the same cell
#
[Config VoIP-D2D]

# Enable D2D for the eNodeB and the UEs involved in direct commulteNications
*.eNodeB*.d2dCapable = true
*.car[*].d2dCapable = true
**.amcMode = "D2D"

# --- Set the D2D peering capabilities ---#
#
# For each D2D-capable UE, write a list of UEs (separated by blank spaces)
# representing the possible peering UEs. Note that this relationship is unidirectional.
# Here, car[0] --> car[5], car[1] --> car[6], etc.
*.car[0..4].lteNic.d2dPeerAddresses = "car[" + string(ancestorIndex(1)+5) + "]"

# --- Select CQI for D2D transmissions --- #
#
# To enable the reporting of CQIs for each D2D link, set the parameter *.eNodeB.lteNic.phy.enableD2DCqiReporting
# To use fixed CQI, set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
*.eNodeB*.lteNic.phy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false

*.car[*].numUdpApps = 1
*.car[0..4].udpApp[0].typename = "VoIPSender"
*.car[0..4].udpApp[0].destAddress = "car[" + string(ancestorIndex(1)+5) + "]"

*.car[5..9].udpApp[0].typename = "VoIPReceiver"





# ----------------------------------------------------------------------------- #
# Config "D2DMulticast"
#
# In this configuration, a transmitting car sends periodic alert messages to neighboring vehicles
#
[Config D2DMulticast]

### Enable D2D for the eNodeB and the UEs involved in direct communications ###
#*.eNodeB*.d2dCapable = true
*.car[*].lteNic.pdcpRrc.IpBased = false
*.car[*].d2dCapable = true
*.car[*].mode4D2D = true
**.amcMode = "D2D"

*.car[*].ueTxPower = 26 

### Select CQI for D2D transmissions ###
# One-to-Many communications work with fixed CQI values only.
# Set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = ${cqi=7}

### Traffic configuration: one-to-many traffic between UEs (car[0] --> car[1..9]) ###
*.car[*].numUdpApps = 1

# Transmitter
*.car[0].udpApp[*].typename = "AlertSender"
*.car[0].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.car[0].udpApp[*].startTime = uniform(0s,0.1s)
*.car[0].udpApp[*].destAddress = "224.0.0.10"          # IP address of the multicast group 
*.car[0].udpApp[*].destPort = 1000

# Receivers (they must belong to the above multicast group)
*.car[1..9].udpApp[*].typename = "AlertReceiver"
*.car[1..9].udpApp[*].localPort = 1000

# enrolled multicast groups must be set in the HostAutoConfigurator (instead of demo.xml), seperated by a single space character
#*.car[*].configurator.mcastGroups = "224.0.0.10"



